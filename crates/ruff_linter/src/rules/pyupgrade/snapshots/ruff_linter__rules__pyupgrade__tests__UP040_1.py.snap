---
source: crates/ruff_linter/src/rules/pyupgrade/mod.rs
snapshot_kind: text
---
UP040_1.py:9:7: UP040 [*] Generic class `A` uses `Generic` subclass instead of type parameters
   |
 9 | class A(Generic[T]):
   |       ^^^^^^^^^^^^^ UP040
10 |     pass
   |
   = help: Use type parameters

ℹ Safe fix
6  6  | P = ParamSpec("P")
7  7  | 
8  8  | 
9     |-class A(Generic[T]):
   9  |+class A[T: float]:
10 10 |     pass
11 11 | 
12 12 | 

UP040_1.py:13:7: UP040 [*] Generic class `B` uses `Generic` subclass instead of type parameters
   |
13 | class B(Generic[*Ts]):
   |       ^^^^^^^^^^^^^^^ UP040
14 |     pass
   |
   = help: Use type parameters

ℹ Safe fix
10 10 |     pass
11 11 | 
12 12 | 
13    |-class B(Generic[*Ts]):
   13 |+class B[*Ts]:
14 14 |     pass
15 15 | 
16 16 | 

UP040_1.py:17:7: UP040 [*] Generic class `C` uses `Generic` subclass instead of type parameters
   |
17 | class C(Generic[P]):
   |       ^^^^^^^^^^^^^ UP040
18 |     pass
   |
   = help: Use type parameters

ℹ Safe fix
14 14 |     pass
15 15 | 
16 16 | 
17    |-class C(Generic[P]):
   17 |+class C[**P]:
18 18 |     pass
19 19 | 
20 20 | 

UP040_1.py:21:5: UP040 [*] Generic function `f` should use type parameters
   |
21 | def f(t: T):
   |     ^^^^^^^ UP040
22 |     pass
   |
   = help: Use type parameters

ℹ Safe fix
18 18 |     pass
19 19 | 
20 20 | 
21    |-def f(t: T):
   21 |+def f[T: float](t: T):
22 22 |     pass
23 23 | 
24 24 | 

UP040_1.py:25:5: UP040 [*] Generic function `g` should use type parameters
   |
25 | def g(ts: tuple[*Ts]):
   |     ^^^^^^^^^^^^^^^^^ UP040
26 |     pass
   |
   = help: Use type parameters

ℹ Safe fix
22 22 |     pass
23 23 | 
24 24 | 
25    |-def g(ts: tuple[*Ts]):
   25 |+def g[*Ts](ts: tuple[*Ts]):
26 26 |     pass
27 27 | 
28 28 | 

UP040_1.py:29:5: UP040 [*] Generic function `h` should use type parameters
   |
29 | def h(p: Callable[P, T]):
   |     ^^^^^^^^^^^^^^^^^^^^ UP040
30 |     pass
   |
   = help: Use type parameters

ℹ Safe fix
26 26 |     pass
27 27 | 
28 28 | 
29    |-def h(p: Callable[P, T]):
   29 |+def h[T: float, **P](p: Callable[P, T]):
30 30 |     pass
